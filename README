    _    _                  _ _   _                   
   / \  | | __ _  ___  _ __(_) |_| |__  _ __ ___  ___ 
  / _ \ | |/ _` |/ _ \| '__| | __| '_ \| '_ ` _ \/ __|
 / ___ \| | (_| | (_) | |  | | |_| | | | | | | | \__ \
/_/   \_\_|\__, |\___/|_|  |_|\__|_| |_|_| |_| |_|___/
           |___/                                      

 ____        _              _                   _                       
|  _ \  __ _| |_ __ _   ___| |_ _ __ _   _  ___| |_ _   _ _ __ ___  ___ 
| | | |/ _` | __/ _` | / __| __| '__| | | |/ __| __| | | | '__/ _ \/ __|
| |_| | (_| | || (_| | \__ \ |_| |  | |_| | (__| |_| |_| | | |  __/\__ \
|____/ \__,_|\__\__,_| |___/\__|_|   \__,_|\___|\__|\__,_|_|  \___||___/
                                                                        

My way of learning new and freshening up my memory on algorithms and data structures.
The implementations are stored as <Name of algorithm or data structure>-<Language used>.
If external test data is required (or avaliable), it is located in a subdirectory called "data".
All algorithms and data structures has examples included in them.

This is purely for fun and educational purposes. Note that some implementations of algorithms and/or data structures are made as a way for me to learn new languages; "best practise" in the specific language is not always used.

All algorithms and data structures are implemented accordingly to the correct big O notation (big O notation should be avaliable for all algorithms in the comment header in each source file).